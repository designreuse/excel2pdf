/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ObsahFrame.java
 *
 * Created on 28.2.2011, 22:43:11
 */
package cz.wt.convertor.main.gui;

import cz.wt.convertor.main.jreports.datasource.DataSource;
import cz.wt.convertor.main.utils.FileUtils;
import cz.wt.convertor.main.utils.MessagesUtils;
import cz.wt.convertor.main.utils.ProcessUtils;
import java.beans.Beans;
import java.io.File;
import javax.swing.JPanel;

/**
 *
 * @author forrest
 */
public class ObsahFrame extends JPanel {

    private static final long serialVersionUID = 1L;

    /** Creates new form ObsahFrame */
    public ObsahFrame() {
        initComponents();
        if (!Beans.isDesignTime()) {
            initBeans();
        }
    }

    private void initBeans() {
        fileChooserExcel.setExtensionsDescrOpen("Excel 1997 - 2003");
        fileChooserExcel.addAllowExtensionsOpen(".xls");
        fileChooserTemplate.setExtensionsDescrOpen("šablona JasperReports");
        fileChooserTemplate.addAllowExtensionsOpen(".jrxml");
    }

    private boolean jsouVybraneSoubory(File excel, File template) {
        if (excel == null && template == null) {
            MessagesUtils.showWarning(this, "Vyberte šablonu a excel soubor!");
            return false;
        } else {
            if (template == null) {
                MessagesUtils.showWarning(this, "Vyberte šablonu!");
                return false;
            }
            if (excel == null) {
                MessagesUtils.showWarning(this, "Vyberte excel soubor!");
                return false;
            }
        }
        return true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    fileChooserTemplate = new cz.wt.convertor.main.gui.bean.FileChooser();
    fileChooserExcel = new cz.wt.convertor.main.gui.bean.FileChooser();
    jLabelSablona = new javax.swing.JLabel();
    jLabelExcel = new javax.swing.JLabel();
    jButtonPdf = new javax.swing.JButton();
    jButtonTisk = new javax.swing.JButton();

    setLayout(new java.awt.GridBagLayout());

    fileChooserTemplate.setVisibleButtonOpen(true);
    fileChooserTemplate.setVisibleButtonSave(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
    add(fileChooserTemplate, gridBagConstraints);

    fileChooserExcel.setVisibleButtonOpen(true);
    fileChooserExcel.setVisibleButtonSave(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
    add(fileChooserExcel, gridBagConstraints);

    java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("cz/wt/convertor/main/gui/Bundle"); // NOI18N
    jLabelSablona.setText(bundle.getString("ObsahFrame.jLabelSablona.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    add(jLabelSablona, gridBagConstraints);

    jLabelExcel.setText(bundle.getString("ObsahFrame.jLabelExcel.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
    add(jLabelExcel, gridBagConstraints);

    jButtonPdf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/PDF_48x48.png"))); // NOI18N
    jButtonPdf.setToolTipText(bundle.getString("ObsahFrame.jButtonPdf.toolTipText")); // NOI18N
    jButtonPdf.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonPdfActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    gridBagConstraints.insets = new java.awt.Insets(4, 0, 6, 5);
    add(jButtonPdf, gridBagConstraints);

    jButtonTisk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Pastel_Icons-printer.ico-48x48.png"))); // NOI18N
    jButtonTisk.setToolTipText(bundle.getString("ObsahFrame.jButtonTisk.toolTipText")); // NOI18N
    jButtonTisk.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonTiskActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    gridBagConstraints.insets = new java.awt.Insets(4, 0, 6, 5);
    add(jButtonTisk, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents

  private void jButtonPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPdfActionPerformed
      File excel = fileChooserExcel.getFile();
      File template = fileChooserTemplate.getFile();

      if (!jsouVybraneSoubory(excel, template)) {
          return;
      }

      DataSource dataSource = ProcessUtils.loadExcelFileToDataSource(excel);
      byte[] byteArrayPdf = ProcessUtils.transformJRDataSourceToPDF(dataSource, template);

      // DONE
      if (byteArrayPdf != null) {
          File saveFileFromByteArray = ProcessUtils.saveFileFromByteArray(FileUtils.saveFile(this, "generated", ".pdf",
                  "pdf"), byteArrayPdf);
          if (saveFileFromByteArray != null) {
              MessagesUtils.showInfo(this, "Uložen soubor: " + saveFileFromByteArray.getName());
          }
      }
  }//GEN-LAST:event_jButtonPdfActionPerformed

  private void jButtonTiskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTiskActionPerformed
      File excel = fileChooserExcel.getFile();
      File template = fileChooserTemplate.getFile();

      if (!jsouVybraneSoubory(excel, template)) {
          return;
      }

      DataSource dataSource = ProcessUtils.loadExcelFileToDataSource(excel);
      ProcessUtils.printJRDataSource(dataSource, template);
  }//GEN-LAST:event_jButtonTiskActionPerformed
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private cz.wt.convertor.main.gui.bean.FileChooser fileChooserExcel;
  private cz.wt.convertor.main.gui.bean.FileChooser fileChooserTemplate;
  private javax.swing.JButton jButtonPdf;
  private javax.swing.JButton jButtonTisk;
  private javax.swing.JLabel jLabelExcel;
  private javax.swing.JLabel jLabelSablona;
  // End of variables declaration//GEN-END:variables
}
